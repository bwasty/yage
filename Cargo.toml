[package]
name = "yage"
version = "0.0.1"
description = "Yet another graphics engine"
authors = ["Benjamin Wasty <benny.wasty@gmail.com>"]
repository = "https://github.com/bwasty/yage"
readme = "README.md"
license = "MIT/Apache-2.0"
categories = ["rendering"]
keywords = ["glTF", "3D", "scene"]

edition = "2018"

[badges]
maintenance = { status = "experimental" }

[lib]
crate-type = ["cdylib", "rlib"]

[features]
wasm = ["web-sys", "js-sys", "console_error_panic_hook"]
native = [] 
gltf = ["yage-gltf"]
# NOTE: to disable the default wasm feature, use `default-features = false`
default = ["wasm", "gltf"]

[workspace]
members = ["yage-core", "yage-gl", "yage-app", "yage-gltf"]
exclude = ["examples/native-glutin", "examples/native-azul"]

[dependencies]
yage-core = { path = "yage-core", version = "0.0.1" }
yage-gl = { path = "yage-gl", version = "0.0.1" }
yage-app = { path = "yage-app", version = "0.0.1" }
yage-gltf = { path = "yage-gltf", version = "0.0.1", optional = true }

cfg-if = "0.1.6"
wasm-bindgen = "0.2.37"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.3", optional = true }

js-sys = { version = "0.3.14", optional = true }

[dependencies.web-sys]
version = "0.3.14"
optional = true
features = [
  'Document',
  'Element',
  'HtmlCanvasElement',
  'WebGlBuffer',
  'WebGlRenderingContext',
  'WebGlProgram',
  'WebGlShader',
  'Window',
]

[dev-dependencies]
wasm-bindgen-test = "0.2.37"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
